------------------------------------------------------------
2019/05/25 takeshi:
Development and test using node v10.15.3

------------------------------------------------------------
2019/06/08 takeshi:

We needed to use pjproject built from source to permit to debug it as pjw_call_respond gets stuck.


To be able to generate addon.node SO file we needed to build pjsip with -pPIC by doing:

cd pjproject-2.7.2
cat > user.mak <<EOF
export CFLAGS += -fPIC -g
export LDFLAGS +=
EOF

./configure
make dep && make clean && make



After preparing binding.gyp to use pjproject built from source, build of addon was successful:

takeshi@takeshi-desktop:node-sip$ node-gyp configure
gyp info it worked if it ends with ok
gyp info using node-gyp@3.8.0
gyp info using node@10.15.3 | linux | x64
gyp info spawn /usr/bin/python2
gyp info spawn args [ '/home/takeshi/.nvm/versions/node/v10.15.3/lib/node_modules/node-gyp/gyp/gyp_main.py',
gyp info spawn args   'binding.gyp',
gyp info spawn args   '-f',
gyp info spawn args   'make',
gyp info spawn args   '-I',
gyp info spawn args   '/home/takeshi/src/git/themonks/node-sip/build/config.gypi',
gyp info spawn args   '-I',
gyp info spawn args   '/home/takeshi/.nvm/versions/node/v10.15.3/lib/node_modules/node-gyp/addon.gypi',
gyp info spawn args   '-I',
gyp info spawn args   '/home/takeshi/.node-gyp/10.15.3/include/node/common.gypi',
gyp info spawn args   '-Dlibrary=shared_library',
gyp info spawn args   '-Dvisibility=default',
gyp info spawn args   '-Dnode_root_dir=/home/takeshi/.node-gyp/10.15.3',
gyp info spawn args   '-Dnode_gyp_dir=/home/takeshi/.nvm/versions/node/v10.15.3/lib/node_modules/node-gyp',
gyp info spawn args   '-Dnode_lib_file=/home/takeshi/.node-gyp/10.15.3/<(target_arch)/node.lib',
gyp info spawn args   '-Dmodule_root_dir=/home/takeshi/src/git/themonks/node-sip',
gyp info spawn args   '-Dnode_engine=v8',
gyp info spawn args   '--depth=.',
gyp info spawn args   '--no-parallel',
gyp info spawn args   '--generator-output',
gyp info spawn args   'build',
gyp info spawn args   '-Goutput_dir=.' ]
ngyp info ok 
takeshi@takeshi-desktop:node-sip$ node-gyp build
gyp info it worked if it ends with ok
gyp info using node-gyp@3.8.0
gyp info using node@10.15.3 | linux | x64
gyp info spawn make
gyp info spawn args [ 'BUILDTYPE=Release', '-C', 'build' ]
make: Entering directory '/home/takeshi/src/git/themonks/node-sip/build'
  SOLINK_MODULE(target) Release/obj.target/addon.node
  COPY Release/addon.node
make: Leaving directory '/home/takeshi/src/git/themonks/node-sip/build'
gyp info ok 


Howevever, when trying to use it we got:

takeshi@takeshi-desktop:node-sip$ node test.js 
internal/modules/cjs/loader.js:730
  return process.dlopen(module, path.toNamespacedPath(filename));
                 ^

Error: /home/takeshi/src/git/themonks/node-sip/build/Release/addon.node: undefined symbol: srtp_crypto_policy_set_aes_cm_256_hmac_sha1_80
    at Object.Module._extensions..node (internal/modules/cjs/loader.js:730:18)
    at Module.load (internal/modules/cjs/loader.js:600:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:539:12)
    at Function.Module._load (internal/modules/cjs/loader.js:531:3)
    at Module.require (internal/modules/cjs/loader.js:637:17)
    at require (internal/modules/cjs/helpers.js:22:18)
    at Object.<anonymous> (/home/takeshi/src/git/themonks/node-sip/index.js:1:77)
    at Module._compile (internal/modules/cjs/loader.js:701:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:712:10)
    at Module.load (internal/modules/cjs/loader.js:600:32)


This was solved by checking the pjproject from apt dependencies:

takeshi@takeshi-desktop:node-sip$ pkg-config --libs libpjproject
-lpjsua2 -lstdc++ -lpjsua -lpjsip-ua -lpjsip-simple -lpjsip -lpjmedia-codec -lpjmedia -lpjmedia-videodev -lpjmedia-audiodev -lpjmedia -lpjnath -lpjlib-util -lsrtp2 -lpj -lopus -lssl -lcrypto -luuid -lm -lrt -lpthread -lasound -lSDL2 -lavdevice -lavformat -lavcodec -lswscale -lavutil -lv4l2 -lopencore-amrnb -lopencore-amrwb -lvo-amrwbenc

and adding them to the binding.gyp link_settings.libraries.


It also complained about a function from libspeex which was not mentioned in the the pkg-config output. So we addded it.


Then, it failed with:

takeshi@takeshi-desktop:node-sip$ node test.js 
pjw_init thread_id=1319614176

22:39:16.787         os_core_unix.c !pjlib 2.7.2 for POSIX initialized
node: symbol lookup error: /home/takeshi/src/git/themonks/node-sip/build/Release/addon.node: undefined symbol: pj_cis_buf_init


We found this in libpjlib-util:

takeshi@takeshi-desktop:node-sip$ nm pjproject-2.7.2/pjlib-util/lib/libpjlib-util-x86_64-unknown-linux-gnu.a  |grep pj_cis
                 U pj_cis_add_str
                 U pj_cis_buf_init
                 U pj_cis_init
0000000000000170 T pj_cis_add_alpha
00000000000001f0 T pj_cis_add_cis
00000000000001a0 T pj_cis_add_num
0000000000000100 T pj_cis_add_range
00000000000001b0 T pj_cis_add_str
0000000000000000 T pj_cis_buf_init
0000000000000230 T pj_cis_del_range
0000000000000270 T pj_cis_del_str
0000000000000090 T pj_cis_dup
0000000000000040 T pj_cis_init
00000000000002b0 T pj_cis_invert
takeshi@takeshi-desktop:node-sip$ nm pjproject-2.7.2/pjlib-util/lib/libpjlib-util-x86_64-unknown-linux-gnu.a  |grep pj_cis_buf_init
                 U pj_cis_buf_init
0000000000000000 T pj_cis_buf_init


We solved the above by putting -lpjlib-util-x86_64-unknown-linux-gnu as the last library in the list of pjprojects libs.

------------------------------------------------------------
2019/06/08 takeshi:

Problem of having pjw_call_respond stuck was narrowed down to:
  pjsip/src/pjsip-ua/sip_inv.c 
in function
  pjsip_inv_answer

The code stops at this line:
  pjsip_dlg_inc_lock(inv->dlg);

We tried to use latest pjproject 2.8 but the same problem happens.

UPDATE:
  this is happening because pjsip get stuck in call to pjsip_mutex_lock.
  It seems the cause is because we are using a separate thread (boost/thread) to do periodic poll of events
So we changed to make js to periodically do the poll and after that pjw_call_respond worked as expected.



Obs: while investigating this issue, we found this:

#####
Deadlocks
A deadlock is a situation wherein two or more competing actions are waiting for the other to finish, and thus neither ever does.

The internal PJSIP synchronization should be free from deadlock problem. However, deadlock may still arise when PJSIP has to interract with application's mutex.

To avoid deadlock introduced by application's mutex, the following rule MUST be obeyed at all times:

Mutexes MUST always be acquired with the same order, and the order is:
acquire PJSIP mutex first, then
acquire application mutex.
###

https://www.pjsip.org/locking.htm

However, to confirm this is not related to the problem we replaced this:

#define PJW_LOCK()      pthread_mutex_lock(&g_mutex)
#define PJW_UNLOCK()    pthread_mutex_unlock(&g_mutex)

with this:

#define PJW_LOCK()      printf("");
#define PJW_UNLOCK()    printf("");

and the problem persisted.

------------------------------------------------------------
2019/06/08 takeshi:
Due to:
  https://trac.pjsip.org/repos/changeset/5942
we reverted from pjproject-2.8 to pjproject-2.7.2


------------------------------------------------------------
2019/06/08 takeshi:

Failure to compile due change in definition of struct pjmedia_port_info:

takeshi@takeshi-desktop:node-sip$ node-gyp build
gyp info it worked if it ends with ok
gyp info using node-gyp@3.8.0
gyp info using node@10.15.3 | linux | x64
gyp info spawn make
gyp info spawn args [ 'BUILDTYPE=Release', '-C', 'build' ]
make: Entering directory '/home/takeshi/src/git/themonks/node-sip/build'
  CC(target) Release/obj.target/addon/src/pjmedia/src/pjmedia/dtmfdet.o
../src/pjmedia/src/pjmedia/dtmfdet.c: In function ‘pjmedia_dtmfdet_create’:
../src/pjmedia/src/pjmedia/dtmfdet.c:90:29: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
     dtmfdet->base.put_frame = &dtmfdet_put_frame;
                             ^
../src/pjmedia/src/pjmedia/dtmfdet.c: In function ‘dtmfdet_put_frame’:
../src/pjmedia/src/pjmedia/dtmfdet.c:115:19: error: ‘pjmedia_port_info {aka struct pjmedia_port_info}’ has no member named ‘samples_per_frame’
   dport->base.info.samples_per_frame);
                   ^
addon.target.mk:133: recipe for target 'Release/obj.target/addon/src/pjmedia/src/pjmedia/dtmfdet.o' failed
make: *** [Release/obj.target/addon/src/pjmedia/src/pjmedia/dtmfdet.o] Error 1
make: Leaving directory '/home/takeshi/src/git/themonks/node-sip/build'
gyp ERR! build error 
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack     at ChildProcess.onExit (/home/takeshi/.nvm/versions/node/v10.15.3/lib/node_modules/node-gyp/lib/build.js:262:23)
gyp ERR! stack     at ChildProcess.emit (events.js:189:13)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:248:12)
gyp ERR! System Linux 4.15.0-43-generic
gyp ERR! command "/home/takeshi/.nvm/versions/node/v10.15.3/bin/node" "/home/takeshi/.nvm/versions/node/v10.15.3/bin/node-gyp" "build"
gyp ERR! cwd /home/takeshi/src/git/themonks/node-sip
gyp ERR! node -v v10.15.3
gyp ERR! node-gyp -v v3.8.0
gyp ERR! not ok 

UPDATE: actually dtmfdet.c is not necessary as it was just a plain pjmedia sample. Same for simpleua_dtmfdet.c.
So these were removed from binding.gyp target sources list. 

------------------------------------------------------------
2020/08/02 takeshi:

Installation using 'npm install' tested on Ubuntu 18.04.
------------------------------------------------------------
2020/08/08 takeshi:

When trying to build on Debian 10 I got:

$ npm install
npm WARN lifecycle sip-lab@1.0.0~install: cannot run in wd sip-lab@1.0.0 ./install.sh (wd=/usr/local/src/git/github_MayamaTakeshi/sip-lab)
audited 124 packages in 2.618s
found 0 vulnerabilities

But the process exit without error:
$ echo $?
0

which is bad because the addon was left unbuilt.

I had to use:
  npm install --unsafe-perm
otherwise, it doesn't run the install.sh script

Then build went further but now I got:

  CXX(target) Release/obj.target/addon/src/addon.o                                                                                                                                                          
../src/addon.cpp: In function 'Napi::Object init(Napi::Env, Napi::Object)':                                                                                                                                 
../src/addon.cpp:1361:60: error: no matching function for call to 'Napi::Function::New(Napi::Env&, <unresolved overloaded function type>)'                                                                  
   exports.Set("shutdown", Napi::Function::New(env, shutdown));                                                                                                                                             
                                                            ^                                                                                                                                               
In file included from /usr/local/src/git/github_MayamaTakeshi/sip-lab/node_modules/node-addon-api/napi.h:2051,                                                                                              
                 from ../src/addon.cpp:3:                                                                                                                                                                   
/usr/local/src/git/github_MayamaTakeshi/sip-lab/node_modules/node-addon-api/napi-inl.h:1678:17: note: candidate: 'template<class Callable> static Napi::Function Napi::Function::New(napi_env, Callable, con
st char*, void*)'                                                                                                                                                                                           
 inline Function Function::New(napi_env env,                                                                                                                                                                
                 ^~~~~~~~                                                                                                                                                                                   
/usr/local/src/git/github_MayamaTakeshi/sip-lab/node_modules/node-addon-api/napi-inl.h:1678:17: note:   template argument deduction/substitution failed:                                                    
../src/addon.cpp:1361:60: note:   couldn't deduce template parameter 'Callable'                                                                                                                             
   exports.Set("shutdown", Napi::Function::New(env, shutdown));                                                                                                                                             
                                                            ^         

Suspecting the name shutdown was conflicting with something else, I renamed the function as 
  shutdown_
and after that, build went further.

But then I got:

/usr/bin/ld: cannot find -lsrtp
collect2: error: ld returned 1 exit status
make: *** [addon.target.mk:226: Release/obj.target/addon.node] Error 1
make: Leaving directory '/usr/local/src/git/github_MayamaTakeshi/sip-lab/build'

This seems to be because in Debian 10, srtp library changed from libsrtp to libsrtp2.
But, actually, we should not use OS libs and instead we should the ThirdParty ones.
And in the binding.gyp we were actually using this unnecessary line:

           '-lsrtp',

But we already got this one:

           '-L ../pjproject/third_party/lib',


So, I removed '-lsrtp' and built was successful but then when running the sample I got:


$ node samples/simple.js 
internal/modules/cjs/loader.js:730
  return process.dlopen(module, path.toNamespacedPath(filename));
                 ^

Error: /usr/local/src/git/github_MayamaTakeshi/sip-lab/build/Release/addon.node: undefined symbol: crypto_policy_set_aes_cm_256_hmac_sha1_80
    at Object.Module._extensions..node (internal/modules/cjs/loader.js:730:18)
    at Module.load (internal/modules/cjs/loader.js:600:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:539:12)
    at Function.Module._load (internal/modules/cjs/loader.js:531:3)
    at Module.require (internal/modules/cjs/loader.js:637:17)
    at require (internal/modules/cjs/helpers.js:22:18)
    at Object.<anonymous> (/usr/local/src/git/github_MayamaTakeshi/sip-lab/index.js:1:77)
    at Module._compile (internal/modules/cjs/loader.js:701:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:712:10)
    at Module.load (internal/modules/cjs/loader.js:600:32)


So I disable SRTP by setting:

#define PJMEDIA_HAS_SRTP  0

in config_site.h


However, when trying to run
  node samples/simple.js
we are frequently (almost all the time) getting this:

$ node samples/simple.js 
pjw_init thread_id=583253000

21:12:20.187 os_core_unix.c !pjlib 2.5.5-svn for POSIX initialized
undefined
t1 { id: 0, ip: '127.0.0.1', port: 5090 }
t2 { id: 1, ip: '127.0.0.1', port: 5092 }
inv=22c3c118 tdata=3779318

on_state_changed

status=583254296

21:12:20.260                !: Success
wait (line /usr/local/src/git/github_MayamaTakeshi/sip-lab/samples/simple.js:24) started. Waiting for expected_events:
[
  partial_match({
    event: 'incoming_call',
    call_id: collect['call_id']()
  }),
  partial_match({
    event: 'response',
    call_id: 0,
    method: 'INVITE',
    msg: sip_msg({
      $rs: '100',
      $rr: 'Trying',
      $(hdrcnt(via)): 1,
      $hdr(call-id): collect['sip_call_id'](),
      $fU: 'a',
      $fd: 't',
      $tU: 'b',
      $hdr(l): '0'
    })
  })
]
Segmentation fault



Checking with gdb:
Thread 1 "node" received signal SIGSEGV, Segmentation fault.
__strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:120
120     ../sysdeps/x86_64/multiarch/../strlen.S: No such file or directory.
(gdb) bt                     
#0  0x00007ffff7b40206 in __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:120
#1  0x00007ffff7af99ef in _IO_vfprintf_internal (s=0x7fffffff6af0, format=0x7ffff52533ec "on_rx_request %.*s\n\n", ap=0x7fffffff91b0) at vfprintf.c:1638
#2  0x00007ffff7afa866 in buffered_vfprintf (s=s@entry=0x7ffff7c64760 <_IO_2_1_stdout_>, format=format@entry=0x7ffff52533ec "on_rx_request %.*s\n\n", args=args@entry=0x7fffffff91b0) at vfprintf.c:2322
#3  0x00007ffff7af7eb2 in _IO_vfprintf_internal (s=0x7ffff7c64760 <_IO_2_1_stdout_>, format=0x7ffff52533ec "on_rx_request %.*s\n\n", ap=ap@entry=0x7fffffff91b0) at vfprintf.c:1296
#4  0x00007ffff7b00606 in __printf (format=<optimized out>) at printf.c:33
#5  0x00007ffff51ccbe6 in _addon_log(int, char const*, ...) () at /usr/local/src/git/github_MayamaTakeshi/sip-lab/build/Release/addon.node
#6  0x00007ffff51d81a9 in on_rx_request(pjsip_rx_data*) () at /usr/local/src/git/github_MayamaTakeshi/sip-lab/build/Release/addon.node
#7  0x00007ffff520b94b in pjsip_endpt_process_rx_data (p_handled=0x7fffffffa75c, p=0x7fffffffa780, rdata=0x266f488, endpt=0x261e7a8) at ../src/pjsip/sip_endpoint.c:887
#8  0x00007ffff520b94b in pjsip_endpt_process_rx_data (endpt=0x261e7a8, rdata=0x266f488, p=<optimized out>, p_handled=0x7fffffffa75c) at ../src/pjsip/sip_endpoint.c:824
#9  0x00007ffff520bb56 in endpt_on_rx_msg (endpt=0x261e7a8, status=<optimized out>, rdata=0x266f488) at ../src/pjsip/sip_endpoint.c:1037
#10 0x00007ffff52117a6 in pjsip_tpmgr_receive_packet (mgr=<optimized out>, rdata=rdata@entry=0x266f488) at ../src/pjsip/sip_transport.c:1938
#11 0x00007ffff5213a4f in udp_on_read_complete (key=0x26257e8, op_key=<optimized out>, bytes_read=<optimized out>) at ../src/pjsip/sip_transport_udp.c:170
#12 0x00007ffff5236e28 in ioqueue_dispatch_read_event (h=0x26257e8, ioqueue=0x2629600) at ../src/pj/ioqueue_common_abs.c:605
#13 0x00007ffff5236e28 in ioqueue_dispatch_read_event (ioqueue=0x2629600, h=0x26257e8) at ../src/pj/ioqueue_common_abs.c:433
#14 0x00007ffff52386cf in pj_ioqueue_poll (ioqueue=0x2629600, timeout=timeout@entry=0x7fffffffb190) at ../src/pj/ioqueue_select.c:981
#15 0x00007ffff520b70a in pjsip_endpt_handle_events2 (endpt=0x261e7a8, max_timeout=0x7fffffffb1d0, p_count=0x0) at ../src/pjsip/sip_endpoint.c:742
#16 0x00007ffff51cf824 in handle_events() () at /usr/local/src/git/github_MayamaTakeshi/sip-lab/build/Release/addon.node
#17 0x00007ffff51d00a4 in __pjw_poll(char*) () at /usr/local/src/git/github_MayamaTakeshi/sip-lab/build/Release/addon.node
#18 0x00007ffff51dab71 in do_poll(Napi::CallbackInfo const&) () at /usr/local/src/git/github_MayamaTakeshi/sip-lab/build/Release/addon.node
#19 0x00007ffff51e4923 in Napi::details::CallbackData<Napi::Value (*)(Napi::CallbackInfo const&), Napi::Value>::Wrapper(napi_env__*, napi_callback_info__*) ()
    at /usr/local/src/git/github_MayamaTakeshi/sip-lab/build/Release/addon.node
#20 0x00000000008e85b5 in (anonymous namespace)::v8impl::FunctionCallbackWrapper::Invoke(v8::FunctionCallbackInfo<v8::Value> const&) ()
#21 0x0000000000b62a3f in v8::internal::MaybeHandle<v8::internal::Object> v8::internal::(anonymous namespace)::HandleApiCallHelper<false>(v8::internal::Isolate*, v8::internal::Handle<v8::internal::HeapObj
ect>, v8::internal::Handle<v8::internal::HeapObject>, v8::internal::Handle<v8::internal::FunctionTemplateInfo>, v8::internal::Handle<v8::internal::Object>, v8::internal::BuiltinArguments) ()
#22 0x0000000000b635a9 in v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) ()
#23 0x0000309d62fdbe1d in  ()


So it is a bug in our code.


But building it with these changes in on ubuntu 18.04.4 doesn't cause this crash which means in Debian 10 a condition that increases the chances of crash was introduced.
Anyway, we will commit these changes and solve the crash later.

------------------------------------------------------------
2020/08/09 takeshi:

We had to disable SRTP pjsip support (config_site.h) because of this:

$ node samples/simple.js 
internal/modules/cjs/loader.js:730
  return process.dlopen(module, path.toNamespacedPath(filename));
                 ^

Error: /mnt/backup/takeshi_tmp/sip-lab/build/Release/addon.node: undefined symbol: crypto_policy_set_aes_cm_256_hmac_sha1_80
    at Object.Module._extensions..node (internal/modules/cjs/loader.js:730:18)
    at Module.load (internal/modules/cjs/loader.js:600:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:539:12)
    at Function.Module._load (internal/modules/cjs/loader.js:531:3)
    at Module.require (internal/modules/cjs/loader.js:637:17)
    at require (internal/modules/cjs/helpers.js:22:18)
    at Object.<anonymous> (/mnt/backup/takeshi_tmp/sip-lab/index.js:1:77)
    at Module._compile (internal/modules/cjs/loader.js:701:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:712:10)
    at Module.load (internal/modules/cjs/loader.js:600:32)

------------------------------------------------------------
2020/08/12 takeshi:

We did adjustments to support late negotiation.
For this we split original callback on_rx_offer in new callbacks on_rx_offer and on_rx_reinvite.
This worked with initial INVITE late negotiation.
However, it crashed with RE-INVITE late negotiation.
The problem is that on_rx_reinvite is getting an offer without media (due RE-INVITE without SDP).
Instead, I think we should go back to use original on_rx_offer because it seems this is called only when we get media offer and so we would avoid this problem.


------------------------------------------------------------
2022/08/12 takeshi:

When rebuilding the addon, this should be enough (it should be fast):
```
  npm install --unsafe-perm
```


